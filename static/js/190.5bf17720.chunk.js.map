{"version":3,"file":"static/js/190.5bf17720.chunk.js","mappings":"4YAGaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oL,SCgBpBE,GAAQC,EAAAA,EAAAA,KAuHd,MArHA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,SAACC,EAAA,EAAD,CAAeb,MAAOA,EAAtB,UACE,UAACc,EAAA,GAAD,CAAMC,WAAS,EAACC,UAAU,OAAOC,GAAI,CAAEC,OAAQ,SAA/C,WACE,SAACC,EAAA,GAAD,KACA,SAACL,EAAA,GAAD,CACEM,MAAI,EACJC,IAAI,EACJC,GAAI,EACJC,GAAI,EACJN,GAAI,CACFO,gBAAiB,0CACjBC,iBAAkB,YAClBC,gBAAiB,SAAAC,GAAC,MACG,UAAnBA,EAAEC,QAAQC,KACNF,EAAEC,QAAQE,KAAK,IACfH,EAAEC,QAAQE,KAAK,MACrBC,eAAgB,QAChBC,mBAAoB,aAGxB,SAAClB,EAAA,GAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGP,UAAWiB,EAAAA,EAAOC,UAAW,EAAGC,QAAM,EAAvE,UACE,UAACC,EAAA,EAAD,CACEnB,GAAI,CACFoB,GAAI,GACJC,GAAI,GACJC,QAAS,OACTC,cAAe,SACfC,WAAY,UANhB,WASE,SAACC,EAAA,EAAD,CAAQzB,GAAI,CAAE0B,EAAG,EAAGC,QAAS,WAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAY9B,UAAU,KAAK+B,QAAQ,KAAnC,sBAGA,UAACX,EAAA,EAAD,CACEpB,UAAU,OACVgC,YAAU,EACVC,SA9CS,SAAAC,GACnBA,EAAEC,iBACFjD,EAASkD,EAAAA,EAAAA,MAAiB,CAAE/C,MAAAA,EAAOE,SAAAA,KACnCD,EAAS,IACTE,EAAY,KA2CFS,GAAI,CAAEoC,GAAI,GAJZ,WAME,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNhD,KAAK,QACLiD,aAAa,QACbC,WAAS,EACTjD,MAAOP,EACPyD,SAAUrD,KAEZ,SAAC6C,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9C,KAAK,WACLgD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHE,aAAa,mBACbhD,MAAOL,EACPuD,SAAUrD,KAEZ,SAACuD,EAAA,EAAD,CACEC,SAAS,SAACC,EAAA,EAAD,CAAUtD,MAAM,WAAWuD,MAAM,YAC1CR,MAAM,iBAER,SAACS,EAAA,EAAD,CACEL,KAAK,SACLN,WAAS,EACTV,QAAQ,YACR9B,GAAI,CAAEoC,GAAI,EAAGgB,GAAI,GAJnB,sBAQA,SAACvD,EAAA,GAAD,CAAMC,WAAS,EAAf,UACE,SAACD,EAAA,GAAD,CAAMM,MAAI,EAAV,UACE,SAACvB,EAAD,CAAeyE,GAAI,YAAnB,8D,UC7GlB,MAXA,WACE,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACE,iCACE,SAAC,EAAD,IACCF,IAAa,SAACG,EAAA,EAAD","sources":["components/SignInSide/SignInSide.styled.jsx","components/SignInSide/SignInSide.jsx","pages/LoginPage.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n  color: #100733;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    color: #9e1111;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Paper,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n} from '@mui/material';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport operations from '../../redux/auth/auth-operations';\r\nimport { StyledNavLink } from './SignInSide.styled';\r\n\r\nconst theme = createTheme();\r\n\r\nfunction SignInSide() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(operations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n        <CssBaseline />\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage: 'url(https://source.unsplash.com/random)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor: t =>\r\n              t.palette.mode === 'light'\r\n                ? t.palette.grey[50]\r\n                : t.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n          }}\r\n        />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 15,\r\n              mx: 10,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: '#100733' }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                value={email}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={handleChange}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item>\r\n                  <StyledNavLink to={'/register'}>\r\n                    Don't have an account? Sign Up\r\n                  </StyledNavLink>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignInSide;\r\n","import { useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport SignInSide from '../components/SignInSide';\r\nimport { getSelectorLoading } from '../redux/auth/auth-selectors';\r\n\r\nfunction LoginPage() {\r\n  const isLoading = useSelector(getSelectorLoading);\r\n\r\n  return (\r\n    <>\r\n      <SignInSide />\r\n      {isLoading && <Loader />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"names":["StyledNavLink","styled","NavLink","theme","createTheme","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","ThemeProvider","Grid","container","component","sx","height","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","noValidate","onSubmit","e","preventDefault","operations","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","FormControlLabel","control","Checkbox","color","Button","mb","to","isLoading","useSelector","getSelectorLoading","Loader"],"sourceRoot":""}