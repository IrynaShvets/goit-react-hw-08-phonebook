{"version":3,"file":"static/js/880.8614d496.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/FilterContact/FilterContact.styled.jsx","components/FilterContact/FilterContact.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n`;\r\n/*  justify-content: center; */\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-top: 40px;\r\n  border: 0;\r\n  margin-left: 40px;\r\n  margin-right: 90px;\r\n  padding: 20px 40px;\r\n  border-radius: 5px;\r\n  background-image: linear-gradient(\r\n    to top,\r\n    #e8aef0 10%,\r\n    #f4f76d 30%,\r\n    #d977e6 50%,\r\n    #f4f76d 70%,\r\n    #e8aef0\r\n  );\r\n`;\r\n/* background-image: linear-gradient(\r\n    to top,\r\n    #e8aef0 10%,\r\n    #ffffff 30%,\r\n    #d977e6 50%,\r\n    #ffffff 70%,\r\n    #e8aef0\r\n  ); */\r\nexport const Label = styled.label`\r\n  display: inline-flex;\r\n  justify-content: flex-start;\r\n  margin-bottom: 10px;\r\n  color: #3e1268;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  border: 0;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 400px;\r\n  height: 40px;\r\n  outline: none;\r\n  border: 0;\r\n  margin-bottom: 20px;\r\n  padding: 10px 20px;\r\n  font-size: 20px;\r\n`;\r\n/*  border: 0;\r\n  border-bottom: 1px solid #000; */\r\nexport const InputBottom = styled(Input)`\r\n  margin-bottom: 40px;\r\n`;\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 200px;\r\n  height: 300px;\r\n  margin-top: 40px;\r\n`;\r\n\r\n/* export const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 170px;\r\n  height: 40px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  border: 0;\r\n  color: #011b27;\r\n  background-color: #fff;\r\n  &:hover {\r\n    color: #fff;\r\n    background-color: #264d5f;\r\n    box-shadow: 1px 2px 1px #011b27, 3px 5px 4px #264d5f;\r\n    transition: all 400ms cubic-bezier(0.4, 0, 0.3, 1);\r\n  }\r\n`; */\r\n","import { useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BsTelephonePlus } from 'react-icons/bs';\r\nimport { toast } from 'react-toastify';\r\nimport { nanoid } from 'nanoid';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@mui/material';\r\nimport FormImage from '../../images/contact.png';\r\n\r\nimport {\r\n  useGetContactsByNameQuery,\r\n  useAddContactMutation,\r\n} from '../../redux/contacts/contacts-api';\r\nimport {\r\n  Form,\r\n  Label,\r\n  Input,\r\n  InputBottom,\r\n  Image,\r\n  Container,\r\n} from './ContactForm.styled';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const [addContact, { isLoading }] = useAddContactMutation();\r\n  const { data: contacts } = useGetContactsByNameQuery();\r\n\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const normalizedName = name.toLowerCase();\r\n    const isNameInContacts = contacts.some(contact =>\r\n      contact.name.toLowerCase().includes(normalizedName),\r\n    );\r\n\r\n    if (isNameInContacts) {\r\n      setName('');\r\n      setNumber('');\r\n      toast.info(`${name} is already in contacts.`);\r\n    }\r\n\r\n    if (!isNameInContacts) {\r\n      addContact({ name, number });\r\n      setName('');\r\n      setNumber('');\r\n\r\n      toast.success(`${name} with tel:${number} added to contacts.`);\r\n    }\r\n\r\n    /*  navigate('/contacts', { replace: true }); */\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Label htmlFor={nameInputId}>Name</Label>\r\n\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          htmlFor={nameInputId}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n\r\n        <Label htmlFor={numberInputId}>Number</Label>\r\n\r\n        <InputBottom\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          htmlFor={numberInputId}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n\r\n        {/*  <Button type=\"submit\" disabled={isLoading}>\r\n          <BsTelephonePlus\r\n            style={{\r\n              width: 30,\r\n              height: 30,\r\n            }}\r\n          />{' '}\r\n          Add contact\r\n        </Button> */}\r\n        <Button\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n          color=\"secondary\"\r\n          /*  sx={{ mr: 2 }} */\r\n          variant=\"outlined\"\r\n        >\r\n          <BsTelephonePlus\r\n            style={{\r\n              width: 30,\r\n              height: 30,\r\n            }}\r\n          />{' '}\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n      <Image src={FormImage} alt=\"alt\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\n/* <Button\r\n  type=\"submit\"\r\n  disabled={isLoading}\r\n  color=\"secondary\"\r\n  sx={{ mr: 4 }}\r\n  variant=\"outlined\"\r\n>\r\n  <BsTelephonePlus\r\n    style={{\r\n      width: 30,\r\n      height: 30,\r\n    }}\r\n  />{' '}\r\n  Add contact\r\n</Button>; */\r\n","export const getFilter = state => state.contacts;\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: auto;\r\n  margin-left: 40px;\r\n`;\r\n/*  \r\n  margin-right: auto;  margin-left: auto;\r\n  margin-right: auto;*/\r\nexport const Item = styled.li`\r\n  width: 480px;\r\n  height: 50px;\r\n  margin: 0;\r\n  border: 0;\r\n  margin-bottom: 10px;\r\n\r\n  border-radius: 3px;\r\n  background-image: linear-gradient(\r\n    to top,\r\n    #e8aef0 10%,\r\n    #f4f76d 30%,\r\n    #d977e6 50%,\r\n    #f4f76d 70%,\r\n    #e8aef0\r\n  );\r\n  display: flex;\r\n  justify-content: start;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  transition: all 400ms cubic-bezier(0.4, 0, 0.3, 1);\r\n  &:hover {\r\n    box-shadow: 5px 4px 5px 1px rgba(100, 100, 100, 0.7);\r\n  }\r\n`;\r\n/* background-color: #3e1268; */\r\nexport const Text = styled.p`\r\n  margin-right: 10px;\r\n  color: #550c5f;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const ContactWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ChangeColor = styled.span`\r\n  color: #550c5f;\r\n  transition: color 400ms cubic-bezier(0.4, 0, 0.3, 1);\r\n  &:hover {\r\n    color: #ffffff70;\r\n  }\r\n`;\r\n\r\n/* export const Image = styled.img`\r\n  display: block;\r\n  width: 740px;\r\n  height: 500px;\r\n  object-fit: cover;\r\n  position: absolute;\r\n  top: 100px;\r\n  right: 55px;\r\n`;\r\n */\r\n","import { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport { FiDelete } from 'react-icons/fi';\r\nimport { MdContactPhone } from 'react-icons/md';\r\nimport { useGetContactsByNameQuery } from '../../redux/contacts/contacts-api';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport {\r\n  List,\r\n  Item,\r\n  Text,\r\n  ContactWrapper,\r\n  ChangeColor,\r\n  Image,\r\n} from './ContactList.styled';\r\n/* import ContactImage from '../../images/user2.jpg'; */\r\n\r\nconst ContactList = ({ onDeleteContact }) => {\r\n  const { data: contacts } = useGetContactsByNameQuery();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const getVisibleContacts = useMemo(() => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n  }, [filter, contacts]);\r\n\r\n  return (\r\n    <>\r\n      {/*  <Image src={ContactImage} alt=\"alt\" /> */}\r\n      {contacts && (\r\n        <List>\r\n          {getVisibleContacts.map(({ id, name, number }) => (\r\n            <Item key={id}>\r\n              <ContactWrapper>\r\n                <ChangeColor>\r\n                  <MdContactPhone\r\n                    style={{\r\n                      width: 40,\r\n                      height: 40,\r\n                      marginRight: 20,\r\n                    }}\r\n                  />\r\n                </ChangeColor>\r\n                <Text>{name}:</Text>\r\n                <Text>{number}</Text>\r\n              </ContactWrapper>\r\n              <ChangeColor>\r\n                <FiDelete\r\n                  onClick={() => {\r\n                    onDeleteContact(id);\r\n                    toast.warn(`${name} deleted from contacts.`);\r\n                  }}\r\n                  style={{\r\n                    width: 40,\r\n                    height: 40,\r\n                  }}\r\n                />\r\n              </ChangeColor>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      phone: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  height: auto;\r\n  margin: 30px 0;\r\n\r\n  margin-left: 40px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  color: #fff;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  text-shadow: 1px 1px 2px #4d0c03;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 480px;\r\n  height: 40px;\r\n  outline: none;\r\n  border: 0;\r\n  border-bottom: 1px solid #000;\r\n  padding: 10px 30px;\r\n  font-size: 20px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { changesFilter } from '../../redux/contacts/contacts-reducer';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { Label, Input, Wrapper } from './FilterContact.styled';\r\n\r\nconst FilterContact = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>\r\n        <Input\r\n          type=\"text\"\r\n          value={value}\r\n          placeholder=\"Find contacts by name\"\r\n          onChange={e => dispatch(changesFilter(e.currentTarget.value))}\r\n        />\r\n      </Label>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FilterContact;\r\n\r\nFilterContact.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactList';\r\nimport FilterContact from '../components/FilterContact';\r\nimport {\r\n  useGetContactsByNameQuery,\r\n  useDeleteContactMutation,\r\n} from '../redux/contacts/contacts-api';\r\n\r\nfunction ContactsPage() {\r\n  const { data } = useGetContactsByNameQuery();\r\n  const [deleteContact] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <>\r\n      <ContactForm />\r\n      <FilterContact />\r\n      {data && <ContactList onDeleteContact={deleteContact} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsPage;\r\n"],"names":["Container","styled","Form","Label","Input","InputBottom","Image","useState","name","setName","number","setNumber","useNavigate","useAddContactMutation","addContact","isLoading","contacts","useGetContactsByNameQuery","data","nameInputId","nanoid","numberInputId","handleChange","e","currentTarget","value","onSubmit","preventDefault","normalizedName","toLowerCase","isNameInContacts","some","contact","includes","toast","htmlFor","type","onChange","pattern","title","required","Button","disabled","color","variant","style","width","height","src","FormImage","alt","getFilter","state","List","Item","Text","ContactWrapper","ChangeColor","onDeleteContact","filter","useSelector","getVisibleContacts","useMemo","normalizeFilter","map","id","marginRight","onClick","Wrapper","dispatch","useDispatch","placeholder","changesFilter","useDeleteContactMutation","deleteContact"],"sourceRoot":""}